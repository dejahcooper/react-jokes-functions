{"ast":null,"code":"var _jsxFileName = \"/Users/dejahcooper/Downloads/react-jokes-functions/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JokeList() {\n  _s();\n  const numJokesToGet = 5;\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [seenJokes, setSeenJokes] = useState(new Set());\n  async function getJokes() {\n    try {\n      let newJokes = [];\n      let seen = new Set();\n      while (newJokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let joke = res.data;\n        if (!seen.has(joke.id)) {\n          seen.add(joke.id);\n          newJokes.push({\n            ...joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n      setSeenJokes(seen);\n      setJokes(newJokes);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  function generateNewJokes() {\n    setIsLoading(true);\n    getJokes();\n  }\n  useEffect(() => {\n    generateNewJokes();\n  }, []);\n  function vote(id, delta) {\n    setJokes(st => st.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n  const sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-4x fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n      text: j.joke,\n      id: j.id,\n      votes: j.votes,\n      vote: vote\n    }, j.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(JokeList, \"Tt09Yy3txoMDnt31rNHaLLexBZo=\");\n_c = JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Joke","jsxDEV","_jsxDEV","JokeList","_s","numJokesToGet","jokes","setJokes","isLoading","setIsLoading","seenJokes","setSeenJokes","Set","getJokes","newJokes","seen","length","res","get","headers","Accept","joke","data","has","id","add","push","votes","console","log","e","error","generateNewJokes","vote","delta","st","map","j","sortedJokes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/Users/dejahcooper/Downloads/react-jokes-functions/src/JokeList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\n\nexport default function JokeList() {\n  const numJokesToGet = 5;\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [seenJokes, setSeenJokes] = useState(new Set());\n\n  async function getJokes() {\n    try {\n      let newJokes = [];\n      let seen = new Set();\n\n      while (newJokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n        let joke = res.data;\n\n        if (!seen.has(joke.id)) {\n          seen.add(joke.id);\n          newJokes.push({ ...joke, votes: 0 });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n\n      setSeenJokes(seen);\n      setJokes(newJokes);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  function generateNewJokes() {\n    setIsLoading(true);\n    getJokes();\n  }\n\n  useEffect(() => {\n    generateNewJokes();\n  }, []);\n\n  function vote(id, delta) {\n    setJokes((st) =>\n      st.map((j) => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  const sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  return isLoading ? (\n    <div className=\"loading\">\n      <i className=\"fas fa-4x fa-spinner fa-spin\" />\n    </div>\n  ) : (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n        Get New Jokes\n      </button>\n\n      {sortedJokes.map((j) => (\n        <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}